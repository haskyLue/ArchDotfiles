# C-b 
set-option -g prefix C-j
bind-key C-a last-window
# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
# set window split
bind-key v split-window -h
bind-key b split-window

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"


# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
set-window-option -g clock-mode-colour green #green
set-window-option -g mode-keys vi
set-window-option -g automatic-rename # auto window rename


# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01
# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange
# status bar
set-option -g status-bg black #base02
set-option -g status-fg white #yellow
set-option -g status-attr default
set-option -g status-utf8 on
set-option -g status on
set-option -g status-interval 1
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/Workspace/git/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/Workspace/git/tmux-powerline/powerline.sh right)"
# set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"


# Start numbering at 1
set -g base-index 1
# Allows for faster key repetition
set -s escape-time 0
# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
set -g aggressive-resize on
# Activity monitoring
set -g monitor-activity on
set -g visual-activity on
# rm mouse mode fail
set -g mode-mouse off
# color
set -g default-terminal "screen-256color"


if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
