# C-b 
set-option -g prefix C-j

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

#按住shift操作 回到原有的模式

bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
# bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# bind C-y run "tmux save-buffer - | xclip -i"

# 要啥prefix? alt走起!
bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-s split-window -v -c "#{pane_current_path}"
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
bind -n M-left prev # window
bind -n M-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1
bind-key -n  M-0 select-window -t :0
bind-key -n  M-1 select-window -t :1
bind-key -n  M-2 select-window -t :2
bind-key -n  M-3 select-window -t :3
bind-key -n  M-4 select-window -t :4
bind-key -n  M-5 select-window -t :5
bind-key -n  M-6 select-window -t :6
bind-key -n  M-7 select-window -t :7
bind-key -n  M-8 select-window -t :8
bind-key -n  M-9 select-window -t :9

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"


# default window title colors
set-window-option -g window-status-fg colour244 
set-window-option -g window-status-bg default
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg yellow
set-window-option -g clock-mode-colour green 
set-window-option -g mode-keys vi
set-window-option -g automatic-rename # auto window rename

# pane border
set-option -g pane-border-fg colour235 
set-option -g pane-active-border-fg blue 
# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange
# status bar
set-option -g status-bg black #base02
set-option -g status-fg white
set-option -g status-attr dim
set-option -g status-utf8 on
set-option -g status on
set-option -g status-interval 2
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-justify "centre"
set -g status-left '#[fg=red]#S #[bg=blue]#[fg=black,bold] #(uptime| cut -d" " -f12 | cut -d"," -f1) #(sh /home/hasky/Documents/dotfiles/script/netspeed_tmux.sh)'
set -g status-right "#[fg=green]♬ #( mpc | head -n3 | grep -iq off  && echo 'reloading' || mpc | head -n1) #[fg=magenta]#(mpc | awk 'NR==2 {print$3}')"
# run-shell "powerline-daemon -q"
# source "/home/hasky/Workspace/git/powerline/powerline/bindings/tmux/powerline_tmux_1.9_plus.conf"

set -g base-index 1 # Start numbering at 1
set -s escape-time 0 # Allows for faster key repetition
set -g history-limit 10000 
set -g aggressive-resize on # Rather than constraining window size to the maximum size of any client connected to the *session*, constrain window size to the maximum size of any client connected to *that window*. Much more reasonable.
set -g monitor-activity on
set -g visual-activity on

set -g mode-mouse on
set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on

set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm*:smcup@:rmcup@' # scrolling issues
set-option -g renumber-windows on


if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
